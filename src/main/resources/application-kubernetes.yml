spring:
  application:
    name: spring-mcp
  
  profiles:
    active: kubernetes
  
  datasource:
    url: jdbc:mysql://mysql:3306/spring_mcp_db
    username: ${MYSQL_USERNAME:root}
    password: ${MYSQL_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 30000
      connection-timeout: 30000
      max-lifetime: 600000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    show-sql: false
  
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
    vectorstore:
      chroma:
        url: http://chroma:8000
  
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000ms
          max-interval: 10000ms
          multiplier: 2
        default-requeue-rejected: false
  
  zipkin:
    base-url: ${ZIPKIN_BASE_URL:http://zipkin:9411}
  
  sleuth:
    sampler:
      probability: 0.1  # 10% 샘플링 (프로덕션에서 성능 최적화)
  
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=300s

logging:
  level:
    com.example.springmcp: INFO
    org.springframework.ai: WARN
    org.hibernate.SQL: WARN
    org.springframework.security: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
  appender:
    file:
      enabled: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
        "[ai.chat.response.duration]": true
        "[ai.rag.response.duration]": true
        "[url.shorten.duration]": true
        "[url.resolve.duration]": true
      percentiles:
        "[http.server.requests]": 0.5, 0.75, 0.95, 0.99
        "[ai.chat.response.duration]": 0.5, 0.75, 0.95, 0.99
        "[ai.rag.response.duration]": 0.5, 0.75, 0.95, 0.99
    tags:
      application: spring-mcp
      environment: kubernetes
      pod: ${HOSTNAME:unknown}

resilience4j:
  ratelimiter:
    instances:
      default:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 0s
        registerHealthIndicator: true
  
  circuitbreaker:
    instances:
      externalService:
        failureRateThreshold: 50
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 3s
        permittedNumberOfCallsInHalfOpenState: 5
        maxWaitDurationInHalfOpenState: 30s
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        automaticTransitionFromOpenToHalfOpenEnabled: true
        registerHealthIndicator: true

server:
  port: 8080
  shutdown: graceful
  tomcat:
    threads:
      max: 200
      min-spare: 10
    connection-timeout: 20s
    keep-alive-timeout: 60s
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

app:
  shortener:
    key-length: 6
    alphanumeric-characters: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"